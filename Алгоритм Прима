#include <iostream>
#include <vector>
#include <queue>

using namespace std;

const int  INF=1e9;
void prim(int start,vector<vector<pair<int, int>>>&gr,int n){
    vector<int>done(n,0);
    vector<int>dist(n,INF);
    dist[start]=0;
    int max_w=0;
    priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> q;
    q.push({0,start});
    while (!q.empty()){
        int name=q.top().second;
        int weight=q.top().first;
        q.pop();
        if(done[name]!=0)continue;
        done[name]=1;
        max_w+=weight;
        for(auto e:gr[name]){
            if (e.second<dist[e.first] && done[e.first]==0){
                dist[e.first]=e.second;
                q.push({e.second,e.first});
            }
        }
    }
    cout<<max_w;
}
int main() {
    int n,m;
    cin>>n>>m;
    vector<vector<pair<int, int>>>gr(n);
    for(int i=0;i<m;i++){
        int first,second,weight;
        cin>>first>>second>>weight;
        gr[first-1].push_back({second-1,weight});
        gr[second-1].push_back({first-1,weight});
    }
    prim(0,gr,n);
    return 0;
}
