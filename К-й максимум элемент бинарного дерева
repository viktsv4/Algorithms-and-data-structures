#include <iostream>
#include "vector"
using namespace std;


struct Node{
    long long data;
    struct Node *left;
    struct Node *right;
    long long h=0;

};

struct Node* newNode(long long data)
{
    struct Node* elem= new struct Node;
    elem->data = data;
    elem->left = elem->right = nullptr;
    return elem;}

Node* maximum (Node* root,long long k){
    if (root->left!=nullptr and root->h+1<k){
        k=k-(root->h+1);
        root=maximum(root->left,k);
    }
    else {
        if  (root->right!=nullptr and(root->h+1)!=k)
            root=maximum(root->right,k);
    }
    return root;
}
Node* findelem(Node *root){
    while (root->left!= nullptr) root=root->left;
    return root;
}
Node* del(long long data, Node* root) {
    if (root== nullptr)return root;
    if (data>root->data) {
        root->h-=1;
        root->right= del(data,root->right);
    }
    else if (data<root->data){
        root->left= del(data,root->left);

    }
    else {
        if (root->right == nullptr) {
            Node *successor = root->left;
            delete root;
            return successor;
        } else if (root->left == nullptr) {
            Node *successor = root->right;
            delete root;
            return successor;
        }
        Node *successor = findelem(root->right);
        root->data = successor->data;
        root->h-=1;
        root->right = del(successor->data, root->right);
    }
    return root;
}
Node *insert( long long data,Node *root) {

    if (root == nullptr) {
        return newNode(data);
    } else {
        if (root->data > data) {
            root->left = insert(data, root->left);
        } else if(root->data < data){
            root->h+=1;
            //cout<<root->data<<" "<<root->h<<endl;
            root->right = insert(data, root->right);
        }
        return root;
    }
}

int main(){
    Node* root= nullptr;
    long long command;
    long long  weight;
    long long n ;
    cin>>n;
    for(long long i=0;i<n;i++){
        cin>>command;
        if (command==1){
            cin>>weight;
            root=insert(weight,root);
        }
        if (command==-1){
            cin>>weight;
            root=del(weight,root);
            //cout<<root->h<<endl;
        }
        if (command==0){
            cin>>weight;
            cout<<maximum(root,weight)->data<<endl;

        }
    }
    return 0;
}
